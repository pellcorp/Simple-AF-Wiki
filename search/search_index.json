{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"about/","title":"About PellCorp and the Simple AF Project","text":""},{"location":"about/#jason-pell-aka-pellcorp","title":"Jason Pell aka pellcorp","text":"<p>On discord pellcorp is from Australia, he codes, he chases rabbits, and hates haunted printers. In real life Jason Pell is a 51 year-old software engineer obssessed with 3D printing. Simple AF firmware is his brainchild born out of a desire to make his Creality K1 be as easy to configure as his Creality Ender 3. Starting as a simple script to recreate his preferred configuration, which at the time, was using a BLTouch for auto-bedleveling. With his never ending obsession for all things 3D Printing he experimented with a Biqu Microprobe, finding it easy to support both. When a request for a free Beacon was surprisingly granted, support for it too was added, then the Cartographer3D Probe V3, BTT Eddy and finally the Voron Klicky.</p> <p>Crowd funding through Gofundme and Kofi has enabled Jason, fondly referred to as Pell, to purchase equipment such as the Creality K1 Max to add to his Creality K1 and Ender 3 to help provide the commmunity support in freeing them the Creality's butchered firmware.</p>"},{"location":"about/#zerodotcmd","title":"Zerodotcmd","text":"<p>Zerodotcmd, known as Zero on discord, is a Youtube influencer and Simple AF Discord master dedicated to 3D printing, technology, and software. His channel offers tutorials, product reviews, and comprehensive guides on printer modifications, providing content to help viewers enhance their 3D printing setups and deepen their knowledge of the tools and technologies involved. To quote Zero, \"Im just a guy doing stuff.\"</p>"},{"location":"about/#community-contributors","title":"Community Contributors","text":"<p>Discord has brought together an ever growing community of Simple AF converts. Some of which have assisted in the development of Simple AF and its documentation. Thanks to EAZY for wiki/webdevelopment, Zeva for python development, and to the Discord Moderators for supporting Simple AF and its community.</p>"},{"location":"about/#support-the-developers","title":"Support the Developers","text":"<p>If you benefit from this project and want to support the developers, please consider contributing to the Pellcorp GoFundMe or the Kofi account. All contributions go toward purchasing equipment to further test, release fixes, and add new features and upgrades.</p> <p>Pellcorp GofundMe</p> <p>If you can't donate through GoFundMe directly, consider his Kofi account.</p> <p>Buy me a Kofi</p>"},{"location":"about/#special-thanks","title":"Special Thanks","text":"<p>We give very special thanks to RichardTHF from Cartographer3d and Zarboz from Watts Kraken for donating Cartographer3D probes, and to RavenTech3d and Beacon3d for donating Beacon probes to the Simple AF project and for their continuing support.</p> <p>Their continued support enables us to continue to provide you with a quality product and support.</p>"},{"location":"eddy/","title":"Benefits of the Eddy Current Probe","text":"<p>Eddy Current Probes are useful tools for hobbyist 3D printers, providing a nondestructive way to detect surface defects and measure material properties. By using electromagnetic induction, the probe can identify irregularities like cracks or inconsistencies in the printed layers, helping hobbyists maintain the quality of their prints. This is especially beneficial for enthusiasts printing with metal filaments or attempting more intricate, high-precision designs, where part reliability is key. The probe ensures that parts are free of hidden defects before they are used, reducing the likelihood of print failures or the need for costly reprints.</p> <p>Additionally, Eddy Current Probes can help hobbyists assess the material properties of their prints, such as conductivity and hardness, ensuring they match the desired specifications. This is particularly helpful for those experimenting with different filaments or exploring new printing techniques. By offering real-time feedback, the probe allows enthusiasts to make quick adjustments to their printing process, improving the overall consistency and quality of their prints. Ultimately, Eddy Current Probes enhance the hobbyist 3D printing experience by allowing for greater precision, reducing waste, and ensuring that prints meet personal or project-based requirements.</p>"},{"location":"eddy/#choosing-your-probe","title":"Choosing your Probe","text":"<p>If you haven't already chosen your probe here is a brief summary of each.</p>"},{"location":"eddy/#cartographer3d-probe-v3","title":"Cartographer3d Probe V3","text":"<p>The Cartographer3D Probe V3 is an advanced eddy current displacement sensor designed to enhance 3D printing accuracy by precisely scanning the printer's bed surface. Compatible with both USB and CAN setups, it offers flexibility in connectivity options. The probe features an integrated ADXL345 accelerometer, enabling input shaping for improved print quality. Its high-speed scanning capability reduces setup time, allowing enthusiasts to achieve optimal bed leveling efficiently. The compact and lightweight design ensures easy installation without adding significant weight to the printer's toolhead. Users can purchase the Cartographer3D Probe V3 directly from the official website at Cartographer3d or through authorized resellers listed on their resellers page.</p>"},{"location":"eddy/#the-beacon","title":"The Beacon","text":"<p>The Beacon3D Beacon is an innovative eddy current sensor designed to enhance 3D printing precision by rapidly scanning print bed surfaces with sub-micron accuracy. By mounting the lightweight 3.5g sensor to the printer's toolhead, users can achieve a detailed bed mesh in under 20 seconds, compensating for surface irregularities and ensuring optimal first-layer adhesion. Operating at up to 500mm/s with a 1kHz bandwidth, the Beacon eliminates the need for Z-axis movement during scanning, streamlining the bed leveling process. This efficiency not only reduces setup time but also minimizes print failures caused by bed imperfections. The Beacon is compatible with Klipper firmware and requires a metal surface or substrate for operation. Interested users can purchase the Beacon directly from the official website at https://beacon3d.com.</p>"},{"location":"eddy/#btt-eddy","title":"BTT Eddy","text":"<p>The BIGTREETECH (BTT) Eddy is an advanced auto bed leveling sensor that utilizes eddy current technology to deliver rapid and precise bed leveling for 3D printers. Weighing only 6 grams, it minimizes impact on the printer's movement while providing 0.0005mm precision leveling. The sensor heats up in just 20 seconds, ensuring minimal downtime before printing. Its thermal compensation feature maintains accuracy across varying temperatures, and the Z-axis return function ensures consistent print quality. Compatible with a wide range of 3D printers, including models like the Ender 3, the BTT Eddy enhances the printing experience by reducing setup time and improving first-layer adhesion, leading to more successful prints. Enthusiasts can purchase the BTT Eddy from various retailers, including Amazon AMAZON.COM and Aliexpress.com.</p>"},{"location":"mechprobe/","title":"About Mechanical Probes","text":"<p>lorem ipsum portense</p>"},{"location":"welcome/","title":"Welcome","text":""},{"location":"welcome/#the-simple-af-users-guide","title":"The Simple AF User's Guide","text":"<p>Welcome to the Simple AF User's Guide. Our goal is to help you unlock the full potential of your Creality K1 series printer by addressing one of its key limitations\u2014Creality's proprietary firmware. By replacing this with Simple AF firmware, you gain the ability to fine-tune your configuration files through the official Klipper platform and utilize third-party probes, enhancing bed-mesh accuracy for an improved printing experience.</p> <p>Currently, Simple AF officially supports six probes: the Cartographer3D Probe V3, the Beacon, the BTT Eddy, the BLTouch, the Biqu Microprobe, and the Voron-style Klicky. It is also compatible with both the linear rail gantry mod and the stock gantry.</p> <p>While the Simple AF development team has made every effort to ensure this guide is comprehensive, it is a work in progress, and some errors may occur. Should you need assistance, please don\u2019t hesitate to reach out via the Simple AF Discord channel.</p>"},{"location":"welcome/#understand-the-risk","title":"Understand the Risk","text":"<p>By installing Simple AF, you understand that this firmware is not a mature product and is always under development</p> <p>Warning</p> <p>YOU ARE 100% RESPONSIBLE FOR ANY DAMAGES THAT MAY OCCUR TO YOUR PRINTER!</p>"},{"location":"welcome/#how-to-use-this-guide","title":"How to use this guide","text":"<p>Installing Simple AF does not come without risk so before using this guide there are some things to be aware of.</p> <p>This guide is divided into the following sections.</p> <ul> <li>Probe-specific configurations</li> <li>Probe-specific firmware flashing (if applicable)</li> <li>Simple AF Firmware Probe-specific installation</li> <li>Probe-specific calibrations</li> <li>Additional information in the Extras section</li> <li>Frequently Asked Questions</li> </ul> <p>Through out this guide you will see information that is crucial to the installation and operatioon of the Simple AF Firmware and the supported probe you have chosen. We urge you to carefully READ each section before you begin as the information here is beneficial to the successful operation of your printer.</p> <p>Info</p> <p>The information box will provide tips and hints that may help with the setup process and printer/probe operations</p> <p>Warning</p> <p>The warning box provides crucial information that could affect installation or operation</p> <p>Danger</p> <p>The danger box contains information that MUST BE FOLLOWED to prevent damage to your hardware</p> <p>Failure to follow the instructions contained in this guide could result in serious damage to your printer.  The Simple AF development team is not responsible for  any damages that you experience from installing the firmware.</p>"},{"location":"welcome/#choosing-your-probe","title":"Choosing Your Probe","text":"<p>Select your probe type from the menu and follow the guide to install Simple AF firmware on your printer with the probe of your choice.</p>"},{"location":"beacon/beacon/","title":"Beacon","text":""},{"location":"beacon/beacon/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, here is the invite, the <code>#simple-af-beacon</code> channel has been setup for anyone wanting support for beacon.</p> <p></p>"},{"location":"beacon/beacon/#thanks","title":"Thanks","text":"<p>Thanks to https://raven3dtech.com.au/ and https://beacon3d.com for donating Beacon probes to the Simple AF project to add support and continue to support the Beacon.</p>"},{"location":"beacon/beacon/#firmware-requirements","title":"Firmware requirements","text":"<p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware.   Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"beacon/beacon/#slicer-settings","title":"Slicer Settings","text":"<p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code</p> <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre> <p>Machine end G-code</p> <pre><code>END_PRINT\n</code></pre>"},{"location":"beacon/beacon/#probe-installation","title":"Probe Installation","text":"<p>Danger</p> <p>If you are not using a side mount you must verify config changes for beacon.cfg and beacon-k1.cfg  or beacon-k1m.cfg before homing your printer, using Screws Tilt Calculate or doing a bed mesh!  </p> <p>Ignoring these instructions can lead to significant damage to your build plate and/or probe.</p>"},{"location":"beacon/beacon/#mount-options","title":"Mount Options","text":"Mount Beacon URL Notes PurcellV4 RevH Standard https://www.printables.com/model/1071641-beacon-probe-mounts-for-creality-k1-series SkeletorMK7 RevH Low Profile https://www.printables.com/model/833769-the-skeletor-collection-a-creality-k1k1-maxk1c-coo This is only for the low profile cartographer version of the mount!!!"},{"location":"beacon/beacon/#nozzle-offset","title":"Nozzle Offset","text":"<p>Warning</p> <p>It is vital that you verify the model to nozzle tip distance is within the valid range of 2.6 to 3mm. Anything out of this range will cause you problems when it comes time to doing the touch calibration, you can use this tool to verify:</p> <p>https://www.printables.com/model/1060868-cartographer-probe-nozzle-offset-tool</p> <p>Or for side mounted probes you may want to consider this version:</p> <p>https://www.printables.com/model/1121309-cartographer-probe-nozzle-offset-tool-x-offset</p>"},{"location":"beacon/beacon/#k1m-vs-k1k1ck1se","title":"K1M vs K1/K1C/K1SE","text":"<p>Info</p> <p>On a K1M you can use the lidar cable either directly by repinning it, or via the pass through lidar port on the toolhead.  However you cannot use the lidar port on the toolhead for K1, K1C or K1SE.   The reason this does not work is because for Lidar on the K1M creality actually routes a completely separate USB cable from the mainboard.</p>"},{"location":"beacon/beacon/#beacon-firmware","title":"Beacon Firmware","text":"<p>Warning</p> <p>You must have flashed your beacon with the latest beacon firmware (2.1.0 currently) before starting the installation</p> <p>There is a guide for this here</p>"},{"location":"beacon/beacon/#installation","title":"Installation","text":"<p>The installation can only be performed on a printer which has been rooted and ssh granted</p> <p>You need root access, if you are not already root, then follow Helper Script Enable Root Access</p>"},{"location":"beacon/beacon/#factory-reset","title":"Factory Reset","text":"<p>You must do a factory reset before running the installer.sh.   Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\nchmod +x S58factoryreset\n./S58factoryreset reset\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"beacon/beacon/#clone-the-repo","title":"Clone the Repo","text":"<pre><code>git config --global http.sslVerify false\ngit clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\nsync\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>mkdir -p /root/.ssh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\nchmod 777 /root/git-ssh.sh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh/pellcorp-identity\nexport GIT_SSH_IDENTITY=pellcorp\nexport GIT_SSH=/root/git-ssh.sh\ngit clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\ncd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre>"},{"location":"beacon/beacon/#config-overrides","title":"Config Overrides","text":"<p>If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"beacon/beacon/#run-the-installer","title":"Run the installer","text":"<p>To run the script, you must use the following command:</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --install beacon --mount Mount\n</code></pre> <p>Tip</p> <p>For <code>Mount</code> you need to specify the mount option your have used, please refer to Mount Options.   </p> <p>If you are using a non-supported mount you should skip the <code>--mount</code> option and adjust your configuration after installation before trying to perform a bed mesh or Screws Tilt Calculate!</p> RPC failed; curl 18 transfer closed <p>You might get this error:</p> <pre><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining\nfatal: the remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n</code></pre> <p>Just rerun the installer.sh script (with the same probe argument), it will start from the stage that failed (most of the time this will be the Installing Klipper stage!)</p> <p>You can also prefix the installer command with <code>AF_GIT_CLONE=ssh</code> to force git to clone via ssh, this will take a lot longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.</p>"},{"location":"beacon/beacon/#post-installation","title":"Post Installation","text":""},{"location":"beacon/beacon/#mcu-firmware-updates-are-pending","title":"MCU Firmware updates are pending","text":"<p>At the end of the installer process if you get this message:</p> <pre><code>WARNING: MCU Firmware updates are pending you need to power cycle your printer!\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer.  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail, if you see this message:</p> <pre><code>INFO: Your MCU Firmware is up to date!\n</code></pre> <p>Your printer MCU firmware was updated successfully.   If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance, sometimes an additional power cycle can solve the problem, there is a very short window of time (15 seconds) in which the MCU firmware can be updated, so  there is a chance it will work after an additional power cycle.</p>"},{"location":"beacon/beacon/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often just to make sure you have something if you need to unbrick your printer, simply type <code>CHECK_USB_KEY</code> or hit the button in Fluidd / Mainsail</p> <p>It is important to make sure you have a way to emergency factory reset the printer, if the worst happens.   There is a macro in Simple AF called <code>CHECK_USB_KEY</code> that will wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for a factory reset.</li> <li>If you get no message at all before the script ends (after 60 seconds), your USB is defective.   You can check the <code>messages</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</li> </ul>"},{"location":"beacon/beacon/#timer-too-close-and-microsteps","title":"Timer too close and microsteps","text":"<p>For beacon you cannot use more than <code>microsteps: 32</code>, the MCU cannot handle both more microsteps and beacon, it puts too much pressure on the system and it will throw timer too close during bed meshes.</p>"},{"location":"beacon/beacon/#troubleshooting","title":"Troubleshooting","text":""},{"location":"beacon/beacon/#manual-beacon-serial-device-configuration","title":"Manual Beacon Serial Device configuration","text":"<p>You can run the following command to fix your serial if you forgot to plug your beacon in during the installation or update:</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --fix-serial\n</code></pre>"},{"location":"beacon/beacon/#beaconprobe-object-has-no-attribute-_mcu_freq","title":"'BeaconProbe' object has no attribute '_mcu_freq'","text":"<p>This indicates the beacon was disconnected during homing or some other operation, you need to reboot</p> <p></p>"},{"location":"beacon/beacon/#calibration","title":"Calibration","text":"<ol> <li>Home X Y (<code>G28 X Y</code></li> <li>Run <code>BEACON_CALIBRATE</code> Follow the Paper Test Method Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Source: Calibrate Beacon</p>"},{"location":"beacon/beacon/#first-print","title":"First Print","text":"<p>For this first print you can go and do the tuning first (PID Tuning, etc) or you can go ahead and optimise your <code>cal_nozzle_z</code> using baby stepping.</p> <p>In fluidd the save button after you finish or cancel your print can be a bit hard to find, look for</p> <p></p>"},{"location":"beacon/beacon/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"beacon/beacon/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"beacon/beacon/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"beacon/beacon/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p>"},{"location":"beacon/beacon/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"beacon/beacon_flashing/","title":"Beacon flashing","text":"<p>Danger</p> <p>THIS IS A RISKY OPERATION YOU CAN BRICK YOUR BEACON</p>"},{"location":"beacon/beacon_flashing/#creating-a-live-usb-key","title":"Creating a Live USB Key","text":"<p>If you do not have a Raspberry PI or an Linux Desktop or Server machine, you can create a live USB and boot into that, the following instructions work fine on a Usb Key, just make sure the USB is at least 8GB in size to allow for installing the packages we need and cloning klipper and cartographer-klipper.</p> <p>https://ubuntu.com/tutorials/try-ubuntu-before-you-install#1-getting-started</p>"},{"location":"beacon/beacon_flashing/#install-some-deps-on-ubuntu","title":"Install some deps on Ubuntu","text":"<pre><code>sudo apt-get update\nsudo apt-get install virtualenv python3-dev python3-pip libffi-dev build-essential git dfu-util\n</code></pre>"},{"location":"beacon/beacon_flashing/#clone-klipper-and-beacon-klipper","title":"Clone Klipper and Beacon-Klipper","text":"<pre><code>git clone \"https://github.com/Klipper3d/klipper\" $HOME/klipper\ngit clone https://github.com/beacon3d/beacon_klipper.git $HOME/beacon-klipper\n</code></pre>"},{"location":"beacon/beacon_flashing/#setup-klipper-virtual-env","title":"Setup Klipper Virtual Env","text":"<pre><code>virtualenv --system-site-packages $HOME/klippy-env\n$HOME/klippy-env/bin/pip3 install -r $HOME/klipper/scripts/klippy-requirements.txt\n</code></pre>"},{"location":"beacon/beacon_flashing/#flash-beacon","title":"Flash Beacon","text":"<pre><code>sudo $HOME/beacon-klipper/install.sh\n</code></pre>"},{"location":"bltouch/bltouch/","title":"Bltouch","text":""},{"location":"bltouch/bltouch/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, the <code>#simple-af-bltouch</code> channel has been setup for anyone wanting support for bltouch, crtouch or 3dtouch.</p> <p></p>"},{"location":"bltouch/bltouch/#what-about-crtouch-and-3dtouch","title":"What about CrTouch and 3dTouch","text":"<p>Yep you can use a CrTouch or 3dTouch as an alternative to a BlTouch, however I have not personally used either of these with a K1 and so I can't currently provide detailed guidance on what config is required.   I also think 3dTouch might require slightly different wiring.</p>"},{"location":"bltouch/bltouch/#firmware-requirements","title":"Firmware requirements","text":"<p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware.   Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"bltouch/bltouch/#slicer-settings","title":"Slicer Settings","text":"<p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre></p> <p>Machine end G-code <pre><code>END_PRINT\n</code></pre></p>"},{"location":"bltouch/bltouch/#probe-installation","title":"Probe Installation","text":""},{"location":"bltouch/bltouch/#mount-options","title":"Mount Options","text":"Mount URL Default https://www.printables.com/model/666186-creality-k1-bltouch-adapter CrTouch https://www.printables.com/model/1073375-cr-touch-mount-k1-k1maxk1c-zero-y-offset"},{"location":"bltouch/bltouch/#wiring","title":"Wiring","text":"<p>The probe and the TOUCH port on the Nozzle MCU board both mate with a 5-pin Molex Picoblade connector. A 5-pin cable is needed to connect the probe to the TOUCH port.</p> <p>Some sellers may call the connector \"Micro JST SH 1.25\" but that is incorrect. Several premade cables are compatible. Most notably the Creality cable for their CR Touch probe: - https://www.aliexpress.us/item/1005004960067376.html - https://www.amazon.com/dp/B0BKPFY24M/ - https://www.bastelgarage.ch/0-1m-creality-cr-touch-bl-touch-adapterkabel-sprite-extruder</p> <p>Alternatively, two pre-crimped cables can be soldered together: - https://www.amazon.de/dp/B0BNF6J1RJ</p> <p>Or a cable built from pre-crimped wires and connector housings: - https://www.amazon.de/dp/B08RMQP6YP</p> <p></p> <p></p> <p>Connect to TOUCH port on the nozzle MCU. it is accessible from the side left (LIDAR) side of the printhead and only the external cover of the printhead has to be removed.</p> <p></p> <p></p> <p>IMPORTANT: The configuration file assumes a bltouch is mounted on the back of the tool head.   If you have a Crtouch or are mounting your bltouch or 3dtouch using a different model, you must make additional changes to the bltouch-k1.cfg or bltouch-k1m.cfg files before trying to home your printer.</p> <p>Source: Portions of this section are copied from the K1 Bltouch guide for helper script.</p>"},{"location":"bltouch/bltouch/#installation","title":"Installation","text":"<p>The installation can only be performed on a printer which has been rooted and ssh granted</p> <p>You need root access, if you are not already root, then follow the excellent Helper Script Enable Root Access instructions.</p>"},{"location":"bltouch/bltouch/#factory-reset","title":"Factory Reset","text":"<p>You must do a factory reset before running the installer.sh.   Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\nchmod +x S58factoryreset\n./S58factoryreset reset\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"bltouch/bltouch/#clone-the-repo","title":"Clone the Repo","text":"<pre><code>git config --global http.sslVerify false\ngit clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\nsync\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>mkdir -p /root/.ssh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\nchmod 777 /root/git-ssh.sh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh/pellcorp-identity\nexport GIT_SSH_IDENTITY=pellcorp\nexport GIT_SSH=/root/git-ssh.sh\ngit clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\ncd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre>"},{"location":"bltouch/bltouch/#config-overrides","title":"Config Overrides","text":"<p>If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"bltouch/bltouch/#run-the-installer","title":"Run the installer","text":"<p>To run the script, you must specify the probe you want to use.</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --install bltouch --mount Mount\n</code></pre> <p>Tip</p> <p>For <code>Mount</code> you need to specify the mount option your have used, please refer to Mount Options.   </p> <p>If you are using a non-supported mount you should skip the <code>--mount</code> option and adjust your configuration after installation before trying to perform a bed mesh or Screws Tilt Calculate!</p> RPC failed; curl 18 transfer closed <p>You might get this error:</p> <pre><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining\nfatal: the remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n</code></pre> <p>Just rerun the installer.sh script (with the same probe argument), it will start from the stage that failed (most of the time this will be the Installing Klipper stage!)</p> <p>You can also prefix the installer command with <code>AF_GIT_CLONE=ssh</code> to force git to clone via ssh, this will take a lot longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.</p>"},{"location":"bltouch/bltouch/#post-installation","title":"Post Installation","text":""},{"location":"bltouch/bltouch/#mcu-firmware-updates-are-pending","title":"MCU Firmware updates are pending","text":"<p>At the end of the installer process if you get this message:</p> <pre><code>WARNING: MCU Firmware updates are pending you need to power cycle your printer!\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer.  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail, if you see this message:</p> <pre><code>INFO: Your MCU Firmware is up to date!\n</code></pre> <p>Your printer MCU firmware was updated successfully.   If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance, sometimes an additional power cycle can solve the problem, there is a very short window of time (15 seconds) in which the MCU firmware can be updated, so  there is a chance it will work after an additional power cycle.</p>"},{"location":"bltouch/bltouch/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often just to make sure you have something if you need to unbrick your printer, simply type <code>CHECK_USB_KEY</code> or hit the button in Fluidd / Mainsail</p> <p>It is important to make sure you have a way to emergency factory reset the printer, if the worst happens.   There is a macro in Simple AF called <code>CHECK_USB_KEY</code> that will wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for a factory reset.</li> <li>If you get no message at all before the script ends (after 60 seconds), your USB is defective.   You can check the <code>messages</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</li> </ul>"},{"location":"bltouch/bltouch/#calibration","title":"Calibration","text":"<p>For the bltouch/3dtouch/crtouch it is extremely important to do the PROBE_CALIBRATE step to configure your z-offset, regardless of what model you have used to mount the probe!</p> <p></p> <p>You should use the Paper Test Method for this z-offset calibration.</p> <p>Note</p> <p>The default z-offset for BLTouch, 3dTouch and CrTouch is 0, so your prints won't stick without doing this step.</p>"},{"location":"bltouch/bltouch/#timer-too-close-and-microsteps","title":"Timer too close and microsteps","text":"<p>For bltouch, etc you cannot use more than <code>microsteps: 64</code></p>"},{"location":"bltouch/bltouch/#axis-twist-compensation","title":"Axis Twist Compensation","text":"<p>Next it is highly recommended to perform axis twist compensation calibration before doing anything else, this will affect the quality of your bed mesh, so best to do it before.</p> <ol> <li>Home All (<code>G28</code>)</li> <li>Run <code>AXIS_TWIST_COMPENSATION_CALIBRATE</code>  The calibration wizard will prompt you to measure the probe Z offset at a few points along the bed Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Source: https://www.klipper3d.org/Axis_Twist_Compensation.html</p>"},{"location":"bltouch/bltouch/#first-print","title":"First Print","text":"<p>For this first print you can go and do the tuning first (PID Tuning, etc) or you can go ahead and optimise your probe z offset using baby stepping.</p> <p>In fluidd the save button after you finish or cancel your print can be a bit hard to find, look for</p> <p></p>"},{"location":"bltouch/bltouch/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"bltouch/bltouch/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"bltouch/bltouch/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"bltouch/bltouch/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p>"},{"location":"bltouch/bltouch/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"btteddy/btteddy/","title":"Btteddy","text":""},{"location":"btteddy/btteddy/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, the <code>#simple-af-btteddy</code> channel has been setup for anyone wanting support for btt eddy.</p> <p></p>"},{"location":"btteddy/btteddy/#firmware-requirements","title":"Firmware requirements","text":"<p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware.   Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"btteddy/btteddy/#slicer-settings","title":"Slicer Settings","text":"<p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre></p> <p>Machine end G-code <pre><code>END_PRINT\n</code></pre></p>"},{"location":"btteddy/btteddy/#probe-installation","title":"Probe Installation","text":"<p>Danger</p> <p>Please note if you are not using ZeroDotCmd side mount you might have to make post install config changes to btteddy.cfg and btteddy-k1.cfg or btteddy-k1m.cfg before homing your printer, using screw tilt adjust or doing a bed mesh!    Ignoring these instructions can lead to significant damage to your build plate and/or probe.</p> <p>Ignoring these instructions can lead to significant damage to your build plate and/or probe.</p>"},{"location":"btteddy/btteddy/#mount-options","title":"Mount Options","text":"Mount URL Default https://www.printables.com/model/1012524-btteddy-creality-k1-k1c-k1-max-mount Pellcorp https://www.printables.com/model/965667-wip-k1-btt-eddy-rear-mount-v4"},{"location":"btteddy/btteddy/#nozzle-offset","title":"Nozzle Offset","text":"<p>Warn</p> <p>If you use a different probe mount you must make sure the bottom of the btt eddy is between 2.5mm and 3mm from the tip of the nozzle, so if the nozzle is touching the bed (when both are cold), the bottom of the eddy should be at least 2.5mm above the bed and no more than 3mm.</p>"},{"location":"btteddy/btteddy/#k1m-vs-k1k1ck1se","title":"K1M vs K1/K1C/K1SE","text":"<p>Info</p> <p>On a K1M you can use the lidar cable either directly by repinning it, or via the pass through lidar port on the toolhead.  However you cannot use the lidar port on the toolhead for K1, K1C or K1SE.   The reason this does not work is because for Lidar on the K1M creality actually routes a completely separate USB cable from the mainboard.</p>"},{"location":"btteddy/btteddy/#btt-eddy-firmware","title":"BTT Eddy Firmware","text":"<p>Warning</p> <p>It is assumed that you have flashed your eddy with the firmware from https://github.com/pellcorp/klipper/blob/master/fw/K1/btteddy.uf2 before starting the installation!!!</p> <p>I have put together a guide for flashing the btt eddy here</p>"},{"location":"btteddy/btteddy/#installation","title":"Installation","text":"<p>The installation can only be performed on a printer which has been rooted and ssh granted</p> <p>You need root access, if you are not already root, then follow the excellent Helper Script Enable Root Access instructions.</p> <p>Tip</p> <p>ZeroDotCmd (aka Zero on discord) has provided an excellent BTT Eddy installation video, you can find it https://www.youtube.com/watch?v=B17sS1klRxA</p>"},{"location":"btteddy/btteddy/#factory-reset","title":"Factory Reset","text":"<p>You must do a factory reset before running the installer.sh.   Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\nchmod +x S58factoryreset\n./S58factoryreset reset\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"btteddy/btteddy/#clone-the-repo","title":"Clone the Repo","text":"<pre><code>git config --global http.sslVerify false\ngit clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\nsync\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>mkdir -p /root/.ssh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\nchmod 777 /root/git-ssh.sh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh/pellcorp-identity\nexport GIT_SSH_IDENTITY=pellcorp\nexport GIT_SSH=/root/git-ssh.sh\ngit clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\ncd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre>"},{"location":"btteddy/btteddy/#config-overrides","title":"Config Overrides","text":"<p>If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"btteddy/btteddy/#run-the-installer","title":"Run the installer","text":"<p>To run the script, you must specify the probe you want to use.</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --install btteddy --mount Mount\n</code></pre> <p>Tip</p> <p>For <code>Mount</code> you need to specify the mount option your have used, please refer to Mount Options.   </p> <p>If you are using a non-supported mount you should skip the <code>--mount</code> option and adjust your configuration after installation before trying to perform a bed mesh or Screws Tilt Calculate!</p> RPC failed; curl 18 transfer closed <p>You might get this error:</p> <pre><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining\nfatal: the remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n</code></pre> <p>Just rerun the installer.sh script (with the same probe argument), it will start from the stage that failed (most of the time this will be the Installing Klipper stage!)</p> <p>You can also prefix the installer command with <code>AF_GIT_CLONE=ssh</code> to force git to clone via ssh, this will take a lot longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.</p>"},{"location":"btteddy/btteddy/#post-installation","title":"Post Installation","text":""},{"location":"btteddy/btteddy/#mcu-firmware-updates-are-pending","title":"MCU Firmware updates are pending","text":"<p>At the end of the installer process if you get this message:</p> <pre><code>WARNING: MCU Firmware updates are pending you need to power cycle your printer!\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer.  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail, if you see this message:</p> <pre><code>INFO: Your MCU Firmware is up to date!\n</code></pre> <p>Your printer MCU firmware was updated successfully.   If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance, sometimes an additional power cycle can solve the problem, there is a very short window of time (15 seconds) in which the MCU firmware can be updated, so  there is a chance it will work after an additional power cycle.</p>"},{"location":"btteddy/btteddy/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often just to make sure you have something if you need to unbrick your printer, simply type <code>CHECK_USB_KEY</code> or hit the button in Fluidd / Mainsail</p> <p>It is important to make sure you have a way to emergency factory reset the printer, if the worst happens.   There is a macro in Simple AF called <code>CHECK_USB_KEY</code> that will wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for a factory reset.</li> <li>If you get no message at all before the script ends (after 60 seconds), your USB is defective.   You can check the <code>messages</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</li> </ul>"},{"location":"btteddy/btteddy/#troubleshooting","title":"Troubleshooting","text":""},{"location":"btteddy/btteddy/#manual-btt-eddy-serial-device-configuration","title":"Manual BTT Eddy Serial Device configuration","text":"<p>You can run the following command to fix your serial if you forgot to plug your btt eddy in during the installation or update:</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --fix-serial\n</code></pre>"},{"location":"btteddy/btteddy/#calibration","title":"Calibration","text":"<p>IMPORTANT: It is extremely important that you perform the following calibrations while the btt eddy is cool, if you calibrate the eddy hot, you will experience <code>Error during homing z: Eddy current sensor error</code> errors while homing and performing bed mesh if the btt is significantly cooler than it was while doing initial calibration.   </p> <p>Note: The <code>BTTEDDY_CALIBRATE_DRIVE_CURRENT</code>, <code>BTTEDDY_CURRENT_CALIBRATE</code> and <code>BTTEDDY_TEMPERATURE_PROBE_CALIBRATE</code> macros will turn on the auxiliary fan until the btt eddy temp is less than 30c before starting the actual calibration.  If you are in a hot climate you may need to adjust the <code>btteddy_macro.cfg</code> <code>variable_calibration_max_temp</code> value to something higher than 30c if you can't get the btt eddy under 30c with the aux fan easily.</p>"},{"location":"btteddy/btteddy/#drive-current-calibration","title":"Drive Current Calibration","text":"<ol> <li>Home XY (<code>G28 X Y</code>)</li> <li>Make sure nozzle is centred on bed</li> <li>Run <code>_SET_KIN_MAX_Z</code> and then move the nozzle so its 20mm from the bed, please try and be as accurate as possible with this distance, its better to be slightly closer to the bed than further away.</li> <li>Run <code>BTTEDDY_CALIBRATE_DRIVE_CURRENT</code></li> <li>Run SAVE_CONFIG</li> </ol> <p>Source: https://github.com/bigtreetech/Eddy?tab=readme-ov-file#2-drive-current-calibration</p>"},{"location":"btteddy/btteddy/#mapping-eddy-readings-to-nozzle-heights","title":"Mapping Eddy Readings To Nozzle Heights","text":"<ol> <li>Home X and Y (<code>G28 X Y</code>)</li> <li>Make sure nozzle is centred on bed</li> <li>Run <code>_SET_KIN_MAX_Z</code> and then move the nozzle so its approximately 2mm from the bed</li> <li>Run <code>BTTEDDY_CURRENT_CALIBRATE</code> Follow the Paper Test Method Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Note: The reason for the tip of nozzle being about 2mm above the bed is that as part of this calibration we will be temporarily saying that the position the nozzle is at right now is 0Z, so if you try to start your paper test when the nozzle is more than about 2mm above the bed, you might end up triggering a nozzle out of bounds error, if we have to jog the nozzle down more than 5mm for example.</p> <p>WARNING: Do not use a metal feeler gauge for this step, it could interfere with calibration!!!</p> <p>Source: https://github.com/bigtreetech/Eddy?tab=readme-ov-file#3-mapping-eddy-readings-to-nozzle-heights</p>"},{"location":"btteddy/btteddy/#temperature-compensation-calibration","title":"Temperature Compensation Calibration","text":"<ol> <li>Home All (<code>G28</code>)</li> <li>Make sure nozzle is centred on bed</li> <li>Run <code>BTTEDDY_TEMPERATURE_PROBE_CALIBRATE</code> Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>WARNING: Do not use a metal feeler gauge for this step, it could interfere with calibration!!!</p> <p>Note: If you are struggling to get over about 80c, you can end the calibration early with the <code>TEMPERATURE_PROBE_COMPLETE</code> macro, just know that if you end the calibration early and then you try to print really hot and the eddy gets hotted than the hottest temp you calibrated the eddy is going to read the bed wrong and cause issues for homing but especially bed meshes.</p> <p>Source: https://github.com/bigtreetech/Eddy?tab=readme-ov-file#5-temperature-compensation-calibration-eddy-usb-only</p>"},{"location":"btteddy/btteddy/#axis-twist-compensation","title":"Axis Twist Compensation","text":"<p>Next it is highly recommended to perform axis twist compensation if you are using a rear mount  before doing anything else, this will affect the quality of your bed mesh, so best to do it before.</p> <ol> <li>Home All (<code>G28</code>)</li> <li>Run <code>AXIS_TWIST_COMPENSATION_CALIBRATE</code> The calibration wizard will prompt you to measure the probe Z offset at a few points along the bed Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>WARNING: Do not use a metal feeler gauge for this step, it could interfere with calibration!!!</p> <p>Source: https://www.klipper3d.org/Axis_Twist_Compensation.html</p>"},{"location":"btteddy/btteddy/#first-print","title":"First Print","text":"<p>For this first print you can go and do the tuning first (PID Tuning, etc) or you can go ahead and optimise your <code>z_offset</code>.  Note you would think that the <code>z_offset</code> in <code>[probe_eddy_current btt_eddy]</code> would allow you to adjust the z offset for a nice first layer, but it seems like the z_offset does not work that way for btt eddy, so we are using the save-zoffset hack originally from Helper Script for btt eddy until such time as the z_offset does actually work correctly.</p>"},{"location":"btteddy/btteddy/#bed-mesh","title":"Bed Mesh","text":"<p>Now you can now run your first bed mesh: <code>BED_MESH_CALIBRATE</code></p> <p>Source: https://ballaswag.github.io/blog/creality-k1-btt-eddy-guide/ Source: https://github.com/bigtreetech/Eddy</p>"},{"location":"btteddy/btteddy/#error-during-homing-z-eddy-current-sensor-error","title":"Error during homing z: Eddy current sensor error","text":"<p>You might need to adjust your <code>reg_drive_current</code>, for more details: https://github.com/bigtreetech/Eddy?tab=readme-ov-file#sometimes-i-get-error-during-homing-probe-eddy-current-sensor-error</p>"},{"location":"btteddy/btteddy/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"btteddy/btteddy/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"btteddy/btteddy/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"btteddy/btteddy/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p>"},{"location":"btteddy/btteddy/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"btteddy/btteddy_duo_flashing/","title":"Btteddy duo flashing","text":"<p>Danger</p> <p>THIS IS A RISKY OPERATION YOU CAN BRICK YOUR EDDY</p>"},{"location":"btteddy/btteddy_duo_flashing/#creating-a-live-usb-key","title":"Creating a Live USB Key","text":"<p>If you do not have a Raspberry PI or an Linux Desktop or Server machine, you can create a live USB and boot into that, the following instructions work fine on a Usb Key, just make sure the USB is at least 8GB in size to allow for installing the packages we need and cloning klipper.</p> <p>https://ubuntu.com/tutorials/try-ubuntu-before-you-install#1-getting-started</p>"},{"location":"btteddy/btteddy_duo_flashing/#install-some-deps-on-ubuntu","title":"Install some deps on Ubuntu","text":"<pre><code>sudo apt-get install build-essential git libusb-1.0.0-dev pkg-config\n</code></pre>"},{"location":"btteddy/btteddy_duo_flashing/#flashing","title":"Flashing","text":""},{"location":"btteddy/btteddy_duo_flashing/#connecting-in-bootsel-mode","title":"Connecting in BOOTSEL mode","text":"<p>You need to connect your btt eddy to your computer in BOOTSEL mode, you do this by disconnecting the eddy usb, and then push and hold boot button on Eddy (It's next to where the cable plugs in) and at the same time, plug in the cable to your computer.</p> <p>You know its correct if you run an <code>lsusb</code> and see: </p>"},{"location":"btteddy/btteddy_duo_flashing/#flashing-btteddyuf2-file","title":"Flashing btteddy.uf2 file","text":"<p>First of all you need klipper:</p> <pre><code>git clone https://github.com/pellcorp/klipper.git\n</code></pre> <p>Then we need to build the rp2040_flash flasher: <pre><code>cd klipper/lib/rp2040_flash\nmake\ncd -\n</code></pre></p> <p>Note: If make fails you forgot to install <code>build-essential</code> package:</p> <pre><code>sudo apt-get install build-essential\n</code></pre> <p>Then try the make again</p> <p>Then we need to do the actual flashing:</p> <pre><code>cd klipper\nsudo python3 ./scripts/flash_usb.py -t rp2040 -d 2e8a:0003 fw/K1/btteddy.uf2\n</code></pre> <p>Note</p> <p>We are not compiling new firmware, just flashing the firmware I have already prepared.</p>"},{"location":"btteddy/btteddy_flashing/","title":"Btteddy flashing","text":"<p>Danger</p> <p>THIS IS A RISKY OPERATION YOU CAN BRICK YOUR EDDY</p> <p>Flashing Btt DUO</p> <p>Make sure to switch it to USB Mode first of all!!!</p> <p>It is possible this method will not work for the BTT Duo, especially if it is currently flashed for Can from the factory,  and you may need to resort to the old fashioned approach documented here</p>"},{"location":"btteddy/btteddy_flashing/#flashing-on-windows-or-linux-desktop","title":"Flashing on Windows or Linux Desktop","text":""},{"location":"btteddy/btteddy_flashing/#connecting-in-bootsel-mode","title":"Connecting in BOOTSEL mode","text":"<p>You need to connect your btt eddy to your computer in BOOTSEL mode, you do this by disconnecting the eddy usb or eddy duo, and then push and hold boot button on Eddy (It's next to where the cable plugs in) and at the same time, plug in the cable to your computer.</p> <p>On windows or a Linux Desktop if you successfully connected the eddy in bootsel mode, it will be mounted as a new drive on your computer.</p>"},{"location":"btteddy/btteddy_flashing/#flashing-btteddyuf2-file","title":"Flashing btteddy.uf2 file","text":"<p>Copy the btteddy.uf2 file across to the btt eddy drive, it should automatically flash the eddy and disconnect for you.</p> <p>Once this is done go ahead and reconnect your eddy to your K1.</p>"},{"location":"btteddy/btteddy_flashing/#on-k1","title":"On K1","text":"<p>You can also flash the eddy on your K1, but you need to be able to disconnect and reconnect it for this to work, there is currently no way to get the eddy into boot mode any other way!</p> <p>So by default when connecting the btt eddy to the K1, <code>lsusb</code> will report:</p> <pre><code>Bus 001 Device 099: ID 1d50:614e OpenMoko, Inc. USB2.0 Hub\n</code></pre> <p>This means it is not in boot mode and you cannot flash any firmware to it.  You need to hold down the boot button and re-connect your btt eddy to your K1, you will know this worked if you type <code>lsusb</code> and see:</p> <pre><code>Bus 001 Device 101: ID 2e8a:0003  USB2.0 Hub\n</code></pre> <p>Verify that the btt eddy has been mounted as a disk drive on the K1 by running <code>mount</code>, you should see a <code>/tmp/udisk/sda1</code> entry:</p> <p></p> <p>Once this has happened you will be able to copy the btteddy.uf2 file to the eddy via this command:</p> <pre><code>wget --no-check-certificate https://raw.githubusercontent.com/pellcorp/klipper/master/fw/K1/btteddy.uf2 -O /tmp/btteddy.uf2\ncp /tmp/btteddy.uf2 /tmp/udisk/sda1/\n</code></pre> <p>If you check <code>lsusb</code> again, it should have switched back to:</p> <pre><code>Bus 001 Device 102: ID 1d50:614e OpenMoko, Inc. USB2.0 Hub\n</code></pre>"},{"location":"btteddy/btteddy_flashing/#how-do-i-know-it-flashed-correctly","title":"How do I know it flashed correctly?","text":"<p>Unfortunately I know of no way to test this except by plugging it back into the K1, restarting klipper and verifying the via the System tab, a correctly flashed eddy will have </p> <p></p>"},{"location":"btteddy/btteddy_flashing/#migrating-from-k1-mod","title":"Migrating from K1 Mod","text":"<p>The K1 mod has an older version of the btteddy firmware, if you still see this in the System tab, then your flashing failed</p> <p></p>"},{"location":"btteddy/experimental/eddyng/","title":"Eddyng","text":"<p>lorem ipsum</p>"},{"location":"btteddy/experimental/eddyng_flashing/","title":"Eddyng flashing","text":"<p>lorem ipsum</p>"},{"location":"cart/cartcalibrations/","title":"Cartographer3D Calibrations","text":""},{"location":"cart/cartcalibrations/#manual-cartographer-calibrate","title":"Manual Cartographer Calibrate","text":"<p>It is a good idea to heat the nozzle to 150c for this step first!</p> <ol> <li>Home X Y (<code>G28 X Y</code>)</li> <li>Heat Nozzle to 150c (<code>M109 S150</code>) so that any filament can be removed from nozzle</li> <li>Make sure nozzle is centred on bed</li> <li>Run <code>CARTOGRAPHER_CALIBRATE METHOD=manual</code> Follow the Paper Test Method Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Warn</p> <p>Do not use a metal feeler gauge for this step, it could interfere with calibration!!!</p> <p>After the save config you have to do the cartographer threshold scan (see next)</p>"},{"location":"cart/cartcalibrations/#cartographer-threshold-scan","title":"Cartographer Threshold Scan","text":"<p>WARNING: For this next step, it is really important to be near your printer for this step, because if there is any issue with the printer configuration or your carto probe, its possible the nozzle will dig itself into the bed, so be hovering over that e-stop button!</p> <ol> <li>Home All (<code>G28</code>)</li> <li>Make sure nozzle is centred on bed</li> <li>Heat Nozzle to 150c (<code>M109 S150</code>) so that any filament can be removed from nozzle</li> <li>Execute <code>CARTOGRAPHER_THRESHOLD_SCAN SPEED=2 MIN=1500 MAX=5000</code> Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>After the save config you have to do the touch calibration.</p>"},{"location":"cart/cartcalibrations/#cartographer-touch-calibration","title":"Cartographer Touch Calibration","text":"<p>Danger</p> <p>For this next step, it is really important to be near your printer for this step, because if there is any issue with the printer configuration or your carto probe, its possible the nozzle will dig itself into the bed, so be hovering over that e-stop button!</p> <ol> <li>Home All (<code>G28</code>)</li> <li>Heat Nozzle to 150c (<code>M109 S150</code>) so that any filament can be removed from nozzle</li> <li>Execute <code>CARTOGRAPHER_CALIBRATE</code> Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Tip</p> <p>If this fails after 3 tries, you should check to make sure there is not filament stuck to the bottom of your nozzle!</p> <p>Source: https://docs.cartographer3d.com/cartographer-probe/survey-touch</p>"},{"location":"cart/cartcalibrations/#axis-twist-compensation","title":"Axis Twist Compensation","text":"<p>Next it is highly recommended to perform axis twist compensation calibration if you are using a rear mount before doing anything else, this will affect the quality of your bed mesh, so best to do it before.</p> <ol> <li>Home All (<code>G28</code>)</li> <li>Run <code>AXIS_TWIST_COMPENSATION_CALIBRATE</code> The calibration wizard will prompt you to measure the probe Z offset at a few points along the bed Upon completion <code>SAVE_CONFIG</code></li> </ol> <p>Warn</p> <p>Do not use a metal feeler gauge for this step, it could interfere with calibration!!!</p> <p>Source: https://www.klipper3d.org/Axis_Twist_Compensation.html</p>"},{"location":"cart/cartcalibrations/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"cart/cartcalibrations/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"cart/cartcalibrations/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"cart/cartcalibrations/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p> <p>Please make sure to remove any scanner related config from the save config section at the bottom of printer.cfg and save and restart before re-calibrating.</p>"},{"location":"cart/cartcalibrations/#recalibrating","title":"Recalibrating","text":"<p>If you are recalibrating, the follow SAVE_CONFIG sections should be removed:</p> <ul> <li>[scanner model default]</li> <li>[scanner]</li> </ul> <p>Warn</p> <p>Please do not remove the <code>[scanner]</code> section defined at the end of printer.cfg above the save config section.</p>"},{"location":"cart/cartcalibrations/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"cart/cartcalibrations/#troubleshooting","title":"Troubleshooting","text":"<p>https://docs.cartographer3d.com/cartographer-probe/survey-touch/survey-troubleshooting</p>"},{"location":"cart/cartcalibrations/#repo-has-diverged-from-remote","title":"Repo has diverged from remote","text":"<p>You need to click RECOVER and then run from ssh:</p> <pre><code>/usr/data/cartographer-klipper/install.sh\n</code></pre>"},{"location":"cart/cartcalibrations/#error-during-probe-mcu-identification-check-connection","title":"Error during probe mcu identification, check connection","text":"<p>If you get the following error, it means that the cartographer is not connected to the printer.   This is either because its physically not connected, the wiring is wrong, the usb subsystem has disconnected the carto during a restart or the serial id is wrong</p> <p></p> <p>So from ssh run a <code>lsusb</code> and make sure you can see:</p> <p></p> <p>If you cannot see it in <code>lsusb</code>, then it very likely means either the carto is wired incorrectly, or if was working, it just means that an attempt to restart the carto failed because the K1 refused to recognise it, there is no recourse except to Reboot the printer via Fluidd / Mainsail in this case.</p> <p>If you can, then verify that the serial id matches:</p> <p></p> <p>Make sure it matches the <code>serial</code> in <code>cartotouch.cfg</code>:</p> <p></p>"},{"location":"cart/cartcalibrations/#manual-cartographer-serial-device-configuration","title":"Manual Cartographer Serial Device configuration","text":"<p>You can run the following command to fix your serial if you forgot to plug your cartographer in during the installation or update:</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --fix-serial\n</code></pre>"},{"location":"cart/cartcalibrations/#timer-too-close-and-microsteps","title":"Timer too close and microsteps","text":"<p>For cartographer you cannot use more than <code>microsteps: 32</code>, the MCU cannot handle high microsteps and cartographer, it puts too much pressure on the system and it will cause stuttering during bed meshes.</p>"},{"location":"cart/firmware_flashing/","title":"Firmware Flashing the Cartographer3D","text":"<p>These instructions are for the Cartographer3D Probe V3 - USB version only. DO NOT ATTEMPT THIS IF THIS IS NOT THE VERSION YOU HAVE!</p> <p>The Cartographer3d Probe V3 has its own firmware developed by the Cartographer3d developers, and it is important to make sure the Cartographer3d is on the latest supported firmware to function properly with the Simple AF firmware installed on the printer. Below are the steps to help you flash your Cartographer to the recommended firmware version. Always check via discord for which version Simple AF requires.</p> <p>Danger</p> <p>Failing to follow these instructions can BRICK your probe! We can not stress enough how important it is to head all warnings because the Simple AF developers will not be responsible for damages to your hardware.</p> <p>Warning</p> <p>Corrupting the Katapult boot loader is possible using a Linux VM to flash the probe It is strongly recommended to use a live USB over a VM.</p>"},{"location":"cart/firmware_flashing/#verify-your-cable","title":"Verify your Cable","text":"<p>Ensure the cable you are using is pinned correctly. For both flat-pack and right-angle cartographers the default cable that comes with your probe may not be pinned correctly. Refer to the image below.</p> <p></p> <p>Warning</p> <p>The flat-pack and right-angle pin-out shown in the image is different from the low-profile Cartographer's pin-out!</p> <p>DO NOT not use the <code>firmware.cartographer3d.com</code>to flash your probe, it WILL NOT flash the proper version of the <code>CARTOGRAPHER 5.1.0</code> firmware for the K1 and K1 Max!</p>"},{"location":"cart/firmware_flashing/#linux-environment","title":"Linux Environment","text":"<p>You will need a linux environment. This can be a Raspberry Pi, desktop Linux or even a Linux Server as long as you can access a USB port. In addition, you can also flash from a bootable Live USB key running Ubuntu 24.04 Desktop edition as long as you have an available  USB port for the probe to plug into using the included USB cable.</p> <p>Warning</p> <p>We do not recommend trying to flash your probe through a Linux VM due to reports of improperly flashed probes, to do so is oncea gain at your own risk. There is an incompatibility with pyserial and MIPS that prevents you from being able to do this from the printer. An issue for this has been opened with https://github.com/Arksine/katapult/issues/137.</p>"},{"location":"cart/firmware_flashing/#creating-a-live-usb-key","title":"Creating a Live USB Key","text":"<p>If you need to create a live USB with Ubuntu 24.04 Desktop, make sure the USB key drive is at least 8GB in size! You can follow the provide link for a how to create one. https://ubuntu.com/tutorials/try-ubuntu-before-you-install#1-getting-started</p> <p>You are now ready to follow the steps below to flash your Cartographer3D probe.</p>"},{"location":"cart/firmware_flashing/#1-installation-dependencies","title":"1. Installation Dependencies","text":"<p>On your Linux device run the following commands to install the essential packages to flash your probe.</p> <pre><code>    sudo apt-get update\n    sudo apt-get install virtualenv python3-dev python3-pip libffi-dev build-essential git dfu-util\n</code></pre>"},{"location":"cart/firmware_flashing/#2-cloning-the-klipper-environment-and-cartographer-klipper","title":"2. Cloning the Klipper Environment and Cartographer-Klipper","text":"<p>Once the installation dependencies are complete run the following commands to install Klipper and Cartographer-Klipper</p> <pre><code>    git clone \"https://github.com/Klipper3d/klipper\" $HOME/klipper\n    git clone \"https://github.com/Cartographer3D/cartographer-klipper.git\" $HOME/cartographer-klipper```\n</code></pre>"},{"location":"cart/firmware_flashing/#3-setup-klipper-virtual-env","title":"3. Setup Klipper Virtual Env","text":"<p>Run the following command to set the Klipper Virtual Environment</p> <pre><code>    virtualenv --system-site-packages $HOME/klippy-env\n    $HOME/klippy-env/bin/pip3 install -r $HOME/klipper/scripts/klippy-requirements.txt\n</code></pre>"},{"location":"cart/firmware_flashing/#4-cartographer3d-v510-firmware","title":"4. Cartographer3d V5.1.0 Firmware","text":"<p>This firmware is provided by RichardTHF from Cartographer3d.com specifically for the K1, K1C and K1 Max. It is critical that you flash your probe with this version of the Probe V3 firmware to avoid stuttering during bed meshes.</p> <p>Warning</p> <p>You must flash your probe even if you received it new with firmware already installed.</p>"},{"location":"cart/firmware_flashing/#5-connect-cartographer-via-usb","title":"5. Connect Cartographer via USB","text":"<p>Plug the probe into your Pi, Linux desktop/server or computer running Linux from USB key using usb cable that came with your probe. Check that is connected by typing <code>lsusb</code> You should see an entry something like this:</p> <p><code>Bus 001 Device 067: ID 1d50:614e OpenMoko, Inc.</code></p>"},{"location":"cart/firmware_flashing/#6-enable-bootloader-mode","title":"6. Enable Bootloader Mode","text":"<p>Once the probe is connected it is time to enable the Bootloader, run the command below.</p> <pre><code>    CARTO_DEV=$(ls /dev/serial/by-id/usb-Cartographer*)\n    cd $HOME/klipper/scripts\n    sudo $HOME/klippy-env/bin/python -c \"import flash_usb as u; u.enter_bootloader('$CARTO_DEV')\"\n</code></pre> <p>Info</p> <p>IMPORTANT: If you get a message like <code>ls: cannot access '/dev/serial/by-id/usb-Cartographer': No such file or directory</code>, it means you forgot the <code>*</code> in the command above. If you still get this message after correcting the command it means your probe's cable is pinned incorrectly.</p> <p>Once bootloader is enabled you should see a message like:</p> <p><code>Entering bootloader on /dev/serial/by-id/usb-Cartographer_614e_16000C000F43304253373820-if00</code></p> <p>Info</p> <p>If the carto does not enter bootloader mode, it is possible you forgot to use <code>sudo</code>! If your carto does show up in '/dev/serial' but won't enter bootloader mode, you will need to fix this with DFU mode</p>"},{"location":"cart/firmware_flashing/#7-flashing","title":"7. Flashing","text":"<p>Enter the following command:</p> <pre><code>    CATAPULT_DEV=$(ls /dev/serial/by-id/usb-katapult*)\n    sudo $HOME/klippy-env/bin/python $HOME/klipper/lib/canboot/flash_can.py -f $HOME/cartographer-klipper/firmware/v2-v3/survey/5.1.0/Survey_Cartographer_K1_USB_8kib_offset.bin -d $CATAPULT_DEV\n</code></pre> <p>You should see the following out output:</p> <pre><code>Attempting to connect to bootloader\nCanBoot Connected\nProtocol Version: 1.0.0\nBlock Size: 64 bytes\nApplication Start: 0x8002000\nMCU type: stm32f042x6\nFlashing '/home/ubuntu/cartographer-klipper/firmware/v2-v3/survey/5.1.0/Survey_Cartographer_K1_USB_8kib_offset.bin'...\n\n[##################################################]\n\nWrite complete: 22 pages\nVerifying (block count = 338)...\n\n[##################################################]\n\nVerification Complete: SHA = BB45B9575AC57FFF03CA5FE09186DB479E09BF53\nCAN Flash Success\n</code></pre> <p>Note: If the carto does not flash, it is possible you forgot to use <code>sudo</code>!</p> <p>When you reconnect your carto to your printer it should show a version <code>CARTOGRAPHER K1 5.1.0</code>:</p> <p></p>"},{"location":"cart/firmware_flashing/#flashing-k1-firmware-via-dfu-mode","title":"Flashing K1 Firmware via DFU Mode","text":"<p>You will need to temporarily switch to the beta branch to get the 5.1.0 combined dfu firmware:</p> <pre><code>    cd $HOME/cartographer-klipper\n    git fetch\n    git switch beta\n    git reset --hard origin/beta\n</code></pre> <p>You need to bridge the boot pins before you plug your carto in via USB to your Linux session, make sure <code>lsusb</code> reports it being in DFU mode, it should show</p> <p></p> <p>Then cd to the combined firmware directory</p> <pre><code>    cd $HOME/cartographer-klipper/firmware/v2-v3/combined-firmware/5.1.0\n</code></pre> <p>And run dfu-util to write the firmware:</p> <pre><code>    sudo dfu-util -R -a 0 -s 0x08000000:leave -D Full_Survey_Cartographer_CrealityK1_USB_5_1_0.bin\n</code></pre> <p></p> <p>Source: https://docs.cartographer3d.com/cartographer-probe/firmware/manual-methods/cartographer-with-input-shaper/update-via-dfu-mode</p>"},{"location":"cart/preparation/","title":"Preparing your Cartographer3D Probe","text":"<p>Before using the Cartographer3d with any K1 series printer decide which orientation you want to use. The table below lists your mount options and links to supported mounts. The Right Angle configuration is the default.</p>"},{"location":"cart/preparation/#mount-options","title":"Mount Options","text":"<p>Info</p> <p>The Mount column is the switch used during the Simple AF install process.</p> <p>/usr/data/pellcorp/k1/installer.sh --install cartotouch --mount Mount </p> <p>When implemented, the install command will look like this if using the Right Angle probe for a stock K1.  </p> <p>/usr/data/pellcorp/k1/installer.sh --install cartotouch --mount Default</p> Mount Carto URL Notes Default Right Angle Zerodotcmd Right Angle K1 series D3vilStock Flat Pack BootyCall Jones K1 &amp; K1Max Eddy Current Mount BootyGantry Right Angle Rail Carriage Mount May require shimming for correct nozzle offset SkeletorMK7 Low Profile tbkMaker Skeletor Collection This is only for the low profile cartographer version of the mount!!! PurcellV5 Right Angle Purcells Cartographer Mount Collection"},{"location":"cart/preparation/#nozzle-offset","title":"Nozzle Offset","text":"<p>Warning</p> <p>You MUST verify the probe model to nozzle tip distance is within the valid range of 2.6 to 3mm. Anything out of this range will be problematic during the Touch Calibration steps. </p> <p>These tools can be used to verify the nozzle offset:</p> <p>https://www.printables.com/model/1060868-cartographer-probe-nozzle-offset-tool</p> <p>https://www.printables.com/model/1121309-cartographer-probe-nozzle-offset-tool-x-offset</p>"},{"location":"cart/preparation/#k1m-vs-k1k1ck1se","title":"K1M vs K1/K1C/K1SE","text":"<p>Info</p> <p>On a K1M you can use the lidar cable either directly by repinning it, or via the pass-through lidar port on the toolhead. However, you cannot use the lidar port on the toolhead for K1, K1C, or K1SE. The reason this does not work is because for Lidar on the K1M, Creality  routes a completely separate USB cable from the mainboard. </p> <p>Danger</p> <p>If you are not using a side mount you MUST verify config changes for cartotouch.cfg and cartographer-k1.cfg  or cartographer-k1m.cfg BEFORE homing your printer, using Screw_Tilt_Calculate, or doing a Bed_Mesh_Calibrate.  </p> <p>Ignoring these instructions has caused SIGNIFICANT damage to the build plate and/or probe.</p> <p>Once you have decided on which mount to use and have printed it, you are ready to proceed to Firmware Flashing your Cartographer3D.</p>"},{"location":"cart/saf_install/","title":"Simple AF Firmware Installation","text":"<p>Warning</p> <p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware. Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"cart/saf_install/#requirements","title":"Requirements","text":"<pre><code>== 1. Cartographer Firmware ==\n== 2. Probe Installation ==\n    You will have chosen and printed a mount for your style probe and mounted it accordingly to your toolhead.\n</code></pre> <p>Warning</p> <p>You must have flashed your cartographer with <code>CARTOGRAPHER K1 5.1.0</code> survey firmware before starting the installation:</p> <p></p> <p>There is a guide for this here</p>"},{"location":"cart/saf_install/#installation-steps","title":"Installation Steps","text":"<p>Warning</p> <p>The installation can only be performed on a printer which has been rooted and ssh granted.</p> <p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher and enabled root access, if you need instructions on how to root your print you can follow Guilouz's excellent instructions.</p> <p>Tip</p> <p>ZeroDotCmd (aka Zero on discord) has provided an excellent Cartographer installation video, you can find it https://www.youtube.com/watch?v=GuxMITM9o4I. As Simple AF is ever evolving, please refer back to the wiki for updates.</p>"},{"location":"cart/saf_install/#1-factory-reset","title":"1. Factory Reset","text":"<p>You must do a factory reset before running the installer.sh. Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>```bash\n    wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\n```\n```bash\n    chmod +x S58factoryreset\n```\n```bash\n    ./S58factoryreset reset\n```\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"cart/saf_install/#2-clone-the-repo","title":"2. Clone the Repo","text":"<pre><code>```bash\n    git config --global http.sslVerify false\n    git clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\n    sync\n```\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>     mkdir -p /root/.ssh\n     wget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\n     chmod 777 /root/git-ssh.sh\n     wget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh\n     pellcorp-identity\n    export GIT_SSH_IDENTITY=pellcorp\n    export GIT_SSH=/root/git-ssh.sh\n    git clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\n    cd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre> <p>Info</p> <p>== Config Overrides ==     If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"cart/saf_install/#3-run-the-installer","title":"3. Run the installer","text":"<p>To run the script enter the following command replacing MOUNT with the designation from the table under Mount Options. Example:  /usr/data/pellcorp/k1/installer.sh --install cartotouch --mount BootyGantry if you are using the rail carriage mount or  /usr/data/pellcorp/k1/installer.sh --install cartotouch --mount Default if you are using Zerodotcmd's Right angle mount</p> <pre><code>```bash\n    */usr/data/pellcorp/k1/installer.sh --install cartotouch --mount Mount*\n```\n</code></pre> <p>Tip</p> <p>If you are using a non-supported mount you should skip the <code>--mount</code> option and adjust your configuration after installation before trying to perform a bed mesh or Screws Tilt Calculate!</p>"},{"location":"cart/saf_install/#note-rpc-failed-curl-18-transfer-closed","title":"NOTE \"RPC failed; curl 18 transfer closed\"","text":"<pre><code>You might get this error:\n</code></pre> <p><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining     fatal: the remote end hung up unexpectedly     fatal: early EOF     fatal: index-pack failed</code></p> <pre><code>Run the installer.sh script (with the same probe mount) again, it will start from the stage that failed (most of the time this\nwill be the Installing Klipper stage!)\n\nYou can also prefix the installer command with `AF_GIT_CLONE=ssh` to force git to clone via ssh, this will take a **lot** longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.\n</code></pre>"},{"location":"cart/saf_install/#post-installation","title":"Post Installation","text":"<p>== MCU Firmware updates are pending ==</p> <p>At the end of the installer process if you get this message:</p> <pre><code>`WARNING: MCU Firmware updates are pending you need to power cycle your printer!`\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer (turning your printer off at the switch).  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail. You should see the following message message if your MCU was updated successfully:     'INFO: Your MCU Firmware is up to date!'</p> <p>If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance. An additional power cycle can  sometimes solve the problem. There is a very short window of time (aproximately 15 seconds) in which the MCU firmware can be updated, so there is a chance it will work after a second power cycle.</p>"},{"location":"cart/saf_install/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often by typing <code>CHECK_USB_KEY</code> in the Fluidd / Mainsail console command or by clicking the Check_USB_Key macro</p> <p>It is important to make sure you have a way to emergency factory reset the printer should the worst happens. The <code>CHECK_USB_KEY</code> macro wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li> <p>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for an emergency factory reset.</p> </li> <li> <p>If you get no message at all before the script ends (after 60 seconds), your USB is defective. You can check the <code>messages.log</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</p> </li> </ul> <p>== Congratulations you are now ready to perform your initial probe calibratons! ==</p>"},{"location":"cart/slicer_settings/","title":"Slicer settings","text":""},{"location":"cart/slicer_settings/#slicer-settings","title":"Slicer Settings","text":"<p>Warning</p> <p>If you have used a cartographer with k1-klipper, please note that the <code>PRINT_START</code> macro specified in their docs is not supported by this project.   You must change your Slicer Start Print Machine G-Code (see next)</p> <p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code</p> <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre> <p>Machine end G-code</p> <pre><code>END_PRINT\n</code></pre>"},{"location":"cart/update/","title":"Update Cartographer Klipper repo","text":"<p>If you already have cartographer-klipper cloned locally, and especially if you had switched to the beta to flash 5.1.0 firmware, you need to pull down the latest master and switch to it, which you can do like this:</p> <pre><code>cd $HOME/cartographer-klipper\ngit fetch\ngit switch master\ngit reset --hard origin/master\n</code></pre>"},{"location":"extras/config_overrides/","title":"Config overrides","text":"<p>The <code>/usr/data/pellcorp-overrides</code> stores custom cfg and conf files as well as customisations you have made to some of the core config files such as printer.cfg.  </p> <p>The following core config files can have overrides saved for them, please note that except for printer.cfg, fan_control.cfg and moonraker.conf no config files support adding and deleting sections, no support is provided to edit gcode_macro <code>gcode</code> values.   Except for printer.cfg, fan_control.cfg and moonraker.conf you also cannot add or delete values from existing sections, only change existing values.</p> <ul> <li>printer.cfg</li> <li>sensorless.cfg</li> <li>bltouch-k1.cfg</li> <li>bltouch-k1m.cfg</li> <li>microprobe-k1.cfg</li> <li>microprobe-k1m.cfg</li> <li>cartographer.cfg</li> <li>cartographer.conf</li> <li>cartographer-k1.cfg</li> <li>cartographer-k1m.cfg</li> <li>btteddy.cfg</li> <li>btteddy-k1.cfg</li> <li>btteddy-k1m.cfg</li> <li>beacon.conf</li> <li>beacon.cfg</li> <li>beacon-k1.cfg</li> <li>beacon-k1m.cfg</li> <li>KAMP_Settings.cfg</li> <li>moonraker.conf</li> <li>start_end.cfg</li> <li>useful_macros.cfg</li> <li>fan_control.cfg</li> </ul> <p>Tip</p> <p>You should run the CONFIG_OVERRIDES macro every time you make any changes to either your own custom cfg or conf files, or make changes to any core config files.  There is no process monitoring your config directory for changes, this is Simple AF after all, and automatically doing stuff is not simple af!</p> <p>Note</p> <p>The first step in both a <code>/usr/data/pellcorp/k1/installer.sh --update</code> or <code>/usr/data/pellcorp/k1/installer.sh  --reinstall</code> is to backup your config-overrides, so that they can be reapplied, but they will be lost if you do a factory reset.</p>"},{"location":"extras/config_overrides/#git-backups-for-configuration-overrides","title":"Git Backups for Configuration Overrides","text":"<p>If the /usr/data/pellcorp-overrides is a git repo, calling the CONFIG_OVERRIDES or <code>/usr/data/pellcorp/k1/config-overrides.sh</code> will generate a new git commit and push it to origin if any files are changed.</p>"},{"location":"extras/config_overrides/#create-repository","title":"Create repository","text":"<p>Create a new <code>pellcorp-overrides</code> repository on your github account:</p> <p></p> <p>Info</p> <p>You don't actually have to call it pellcorp-overrides, you can call it whatever you want, but it should be a repository dedicated to just doing backups for this project.   Currently config-overrides.sh --repo only supports a single configuration, hopefully soon I will add the ability to specify a branch so you can store multiple configurations in the same repository.</p> <p>Warn</p> <p>Set your new repository to be private unless you want to share settings with everyone else, or potentially sensitive information in the moonraker.conf, notifier.conf, etc.  Be really careful with using github keys in moonraker.conf update manager too, as these will be version controlled.   If possible put all your secrets in moonraker.secrets which is not saved to version control.</p>"},{"location":"extras/config_overrides/#create-a-personal-access-token","title":"Create a personal access token","text":"<p>Click here to create a fine grained personal access token.  Create a fine grained token and limit its access to just your pellcorp-overrides repository.   Make sure that Contents read and write access.</p> <p></p> <p>Make sure you limit it to just the new repository you created:</p> <p></p> <p>Source: https://guilouz.github.io/Creality-Helper-Script-Wiki/helper-script/git-backup/</p>"},{"location":"extras/config_overrides/#create-local-repo","title":"Create Local Repo","text":"<p>You will need 3 pieces of information for this process to succeed:</p> <ol> <li>Your github username</li> <li>Your email address</li> <li>The github token you just created</li> </ol> <p>Ssh into your k1 and run the following:</p> <pre><code>export GITHUB_USERNAME=myusername\nexport EMAIL_ADDRESS=me@somewhere.com\nexport GITHUB_TOKEN=\"The token I just created\"\nexport GITHUB_REPO=pellcorp-overrides\n/usr/data/pellcorp/k1/config-overrides.sh --repo\n</code></pre> <p>If you want to setup the repository locally ignoring any local files in /usr/data/pellcorp-overrides, you can use the <code>--clean-repo</code> argument, instead of the <code>--repo</code> argument, which will rebase the local changes on top of the repo.</p> <p>Note</p> <p>The <code>moonraker.secrets</code> file is not versioned controlled.</p>"},{"location":"extras/config_overrides/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/config_overrides/#support-for-password-authentication-was-removed-on-august-13-2021","title":"Support for password authentication was removed on August 13, 2021","text":"<p>This most likely means your personal access token is misconfigured, deleted, or expired</p>"},{"location":"extras/custom_hooks/","title":"Custom hooks","text":"<p>Within Simple AF if you want to call a custom gcode macro you can with hooks, the following custom gcode macro hooks are supported and more can be added as needed:</p> <ul> <li>_SAF_HOMING_START - at start of homing</li> <li>_SAF_HOMING_END - at end of homing</li> <li>_SAF_START_PRINT_AFTER_G28 - After G28 is called in START_PRINT</li> <li>_SAF_BED_MESH_START - Start of bed mesh calibrate</li> <li>_SAF_BED_MESH_END - End of bed mesh calibrate</li> <li>_SAF_ON_FILAMENT_RUNOUT - When filament runout is triggered</li> </ul> <p>So the way this works is you define your own custom config file (make sure it has a <code>.cfg</code> file extension), and add it to printer.cfg like so:</p> <pre><code>[include MyCustomMacros.cfg]\n</code></pre> <p>Note</p> <p>It does not need to be called <code>MyCustomMacros.cfg</code>, you can call it whatever you like, but it must end with <code>.cfg</code> and it must be saved directly in the config directory, not a sub-directory!</p> <p>Your config file should implement as many of the above macros as you want to, you do not need to implement them all, so for example if you wanted to do something after G28 in START_PRINT, you file might look like:</p> <pre><code>[gcode_macro _SAF_START_PRINT_AFTER_G28]\ngcode:\n   RESPOND TYPE=command MSG='I am getting called after G28'\n</code></pre>"},{"location":"extras/custom_hooks/#knomi-support","title":"Knomi Support","text":"<p>A prime use case for this would be knomi support, which currently might look like this:</p> <pre><code>[gcode_macro _KNOMI_STATUS]\nvariable_homing: False\nvariable_probing: False\nvariable_qgling: False\nvariable_heating_nozzle: False\nvariable_heating_bed: False\ngcode:\n\n\n[gcode_macro M109]\nrename_existing: M109.1\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True\n  M109.1 {rawparams}\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False\n\n\n[gcode_macro M190]\nrename_existing: M190.1\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True\n  M190.1 {rawparams}\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False\n\n\n[gcode_macro _SAF_BED_MESH_START]\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True\n\n\n[gcode_macro _SAF_BED_MESH_END]\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False\n\n\n[gcode_macro _SAF_HOMING_START]\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True\n\n\n[gcode_macro _SAF_HOMING_END]\ngcode:\n  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False\n</code></pre>"},{"location":"extras/misc/","title":"Misc","text":""},{"location":"extras/misc/#octoeverywhere-companion","title":"Octoeverywhere Companion","text":"<p>Octoeverywhere cannot be installed onto the K1 when running the Cartographer, beacon or btt eddy, the stress placed on the system by running octoeverywhere is too great, however the octoeverywhere companion running on another device on the same WIFI network as the K1 works great.</p> <p>https://blog.octoeverywhere.com/octoeverywhere-companion-remote-access-for-any-klipper-printer/</p>"},{"location":"extras/misc/#mobileraker-companion","title":"Mobileraker companion","text":"<p>It is also possible to install mobileraker companion on a separate device</p> <p>https://github.com/Clon1998/mobileraker_companion?tab=readme-ov-file#standalone-installation</p>"},{"location":"extras/misc/#moonraker-timelapse","title":"Moonraker Timelapse","text":"<p>Moonraker timelapse is installed but not enabled by default.  To enable it there are a few steps, you need to add the following include to printer.cfg:</p> <pre><code>[include timelapse.cfg]\n</code></pre> <p>And uncomment the <code>[include timelapse.conf]</code> in moonraker.conf, you will need to restart moonraker and klipper after this, you can that via the fluidd or mainsail services section.</p> <p>If you see these messages:</p> <p><pre><code> 15:14:24  // Unknown command:\"_SET_TIMELAPSE_SETUP\"\n15:14:24  // Unknown command:\"HYPERLAPSE\"\n</code></pre> It means you have not as yet properly restarted moonraker and/or klipper.    If in doubt just power cycle your machine.</p>"},{"location":"extras/misc/#timelapse-camera-config","title":"Timelapse Camera config","text":"<p>Because the single web cam is controlled via moonraker with the webcam.conf file, the Timelapse camera dropdown menu won't let you choose a camera, this is expected.</p> <p></p>"},{"location":"extras/misc/#slicer-changes","title":"Slicer Changes","text":"<p>https://github.com/mainsail-crew/moonraker-timelapse/blob/main/docs/configuration.md#prusa-slicer--super-slicer</p>"},{"location":"extras/misc/#configuring-timezone","title":"Configuring Timezone","text":"<p>The <code>/etc/init.d/S58factoryreset</code> has recently been updated not to delete the <code>/etc/localtime</code>, so you can configure it once and it should survive any number of factory resets, following the excellent guide here:</p> <p>https://guilouz.github.io/Creality-Helper-Script-Wiki/firmwares/change-date-and-time/</p>"},{"location":"extras/misc/#updating","title":"Updating","text":"<p>To update your installation with the latest fixes you should run:</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --branch main\n/usr/data/pellcorp/k1/installer.sh --update\n</code></pre> <p>This backs up your customisations, updates the creality repo, applies all changes to your <code>/usr/data/printer_data/config</code> directory and then reapplies your customisations over the top.</p>"},{"location":"extras/misc/#reinstalling","title":"Reinstalling","text":"<p>A reinstall is only needed if one or more github repos have got into an inconsistent state, so you can force a reinstall with the <code>--reinstall</code> argument in place of the <code>--install</code> argument.  The difference to a <code>--install</code>, is a <code>--install</code> will only finish up a partial install that failed due to a network failure or the like.</p> <p>Info</p> <p>If you switch probes using --update you will have to manually clean up any save configuration for that probe before klipper will start.</p>"},{"location":"extras/misc/#git-backups-for-configuration-overrides","title":"Git Backups for Configuration Overrides","text":"<p>Git Backups for Configuration Overrides</p>"},{"location":"extras/misc/#emergency-factory-reset","title":"Emergency Factory Reset","text":"<p>If the worst happens and you somehow get locked out (for instance for whatever reason the dropbear ssh session does not start or wifi config gets all screwy, it is possible to trigger a emergency factory reset.</p> <p>It is very easy, you just need to create a empty file called <code>emergency_factory_reset</code> on a USB key and make sure the USB key is plugged in, then power cycle the printer, this will initiate a factory reset.</p> <p>Info</p> <p>This factory reset method will rename the <code>emergency_factory_reset</code> to <code>emergency_factory_reset.old</code> to avoid a boot loop, so if you need to use this method again you will need to rename the file.</p> <p>This factory reset method will not remove the special service file <code>/etc/init.d/S58factoryreset</code> from the k1, so if you need it you can redo a factory reset even before reinstalling.</p> <p>This method does not reset wifi or root access</p> <p>Danger</p> <p>It can take up to 5 minutes for an emergency factory restart to finish, it is vital you do not power cycle your printer before the stock screen appears. There may be a 3002 error on the screen, this is completely normal.   If you are planning to install Simple AF you can ignore it, if you are trying to go back to stock, power cycle the printer again to clear the error.  </p> <p>Failing to follow this advice can lead to your printer getting bricked and requiring much more involved intervention to recover!</p> <p></p>"},{"location":"klicky/klicky/","title":"Klicky","text":""},{"location":"klicky/klicky/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, here is the invite, the <code>#simple-af-support</code> channel has been setup for anyone wanting support for klicky.</p> <p></p>"},{"location":"klicky/klicky/#firmware-requirements","title":"Firmware requirements","text":"<p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware.   Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"klicky/klicky/#slicer-settings","title":"Slicer Settings","text":"<p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre></p> <p>Machine end G-code <pre><code>END_PRINT\n</code></pre></p>"},{"location":"klicky/klicky/#custom-bed-mesh-profile","title":"Custom Bed Mesh Profile","text":"<p>If you want to select a specific predefined bed mesh profile, you can pass in an additional <code>START_PRINT</code> parameter:</p> <p>You can either hard code it to a particular model, like <code>BED_MESH_PROFILE=myprofile</code> or you can specify a profile based on orca slicer variables, such as <code>BED_MESH_PROFILE=\"[curr_bed_type] - [filament_type]\"</code>, but you have to make sure you have all the possible profiles defined for each of the bed type and filament type combinations.</p> <p></p>"},{"location":"klicky/klicky/#probe-installation","title":"Probe Installation","text":""},{"location":"klicky/klicky/#mount-options","title":"Mount Options","text":"<p>TODO</p>"},{"location":"klicky/klicky/#installation","title":"Installation","text":"<p>The installation can only be performed on a printer which has been rooted and ssh granted</p> <p>You need root access, if you are not already root, then follow the excellent Helper Script Enable Root Access instructions.</p>"},{"location":"klicky/klicky/#factory-reset","title":"Factory Reset","text":"<p>You must do a factory reset before running the installer.sh.   Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\nchmod +x S58factoryreset\n./S58factoryreset reset\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"klicky/klicky/#clone-the-repo","title":"Clone the Repo","text":"<pre><code>git config --global http.sslVerify false\ngit clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\nsync\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>mkdir -p /root/.ssh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\nchmod 777 /root/git-ssh.sh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh/pellcorp-identity\nexport GIT_SSH_IDENTITY=pellcorp\nexport GIT_SSH=/root/git-ssh.sh\ngit clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\ncd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre>"},{"location":"klicky/klicky/#config-overrides","title":"Config Overrides","text":"<p>If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"klicky/klicky/#run-the-installer","title":"Run the installer","text":"<p>To run the script, you must specify the probe you want to use.</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --branch jp_klicky\n/usr/data/pellcorp/k1/installer.sh --install klicky\n</code></pre> RPC failed; curl 18 transfer closed <p>You might get this error:</p> <pre><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining\nfatal: the remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n</code></pre> <p>Just rerun the installer.sh script (with the same probe argument), it will start from the stage that failed (most of the time this will be the Installing Klipper stage!)</p> <p>You can also prefix the installer command with <code>AF_GIT_CLONE=ssh</code> to force git to clone via ssh, this will take a lot longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.</p>"},{"location":"klicky/klicky/#post-installation","title":"Post Installation","text":""},{"location":"klicky/klicky/#mcu-firmware-updates-are-pending","title":"MCU Firmware updates are pending","text":"<p>At the end of the installer process if you get this message:</p> <pre><code>WARNING: MCU Firmware updates are pending you need to power cycle your printer!\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer.  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail, if you see this message:</p> <pre><code>INFO: Your MCU Firmware is up to date!\n</code></pre> <p>Your printer MCU firmware was updated successfully.   If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance, sometimes an additional power cycle can solve the problem, there is a very short window of time (15 seconds) in which the MCU firmware can be updated, so  there is a chance it will work after an additional power cycle.</p>"},{"location":"klicky/klicky/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often just to make sure you have something if you need to unbrick your printer, simply type <code>CHECK_USB_KEY</code> or hit the button in Fluidd / Mainsail</p> <p>It is important to make sure you have a way to emergency factory reset the printer, if the worst happens.   There is a macro in Simple AF called <code>CHECK_USB_KEY</code> that will wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for a factory reset.</li> <li>If you get no message at all before the script ends (after 60 seconds), your USB is defective.   You can check the <code>messages</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</li> </ul>"},{"location":"klicky/klicky/#calibration","title":"Calibration","text":"<p>TODO</p>"},{"location":"klicky/klicky/#first-print","title":"First Print","text":"<p>For this first print you can go and do the tuning first (PID Tuning, etc) or you can go ahead and optimise your probe z offset using baby stepping.</p> <p>In fluidd the save button after you finish or cancel your print can be a bit hard to find, look for</p> <p></p>"},{"location":"klicky/klicky/#timer-too-close-and-microsteps","title":"Timer too close and microsteps","text":"<p>For microprobe, etc you cannot use more than <code>microsteps: 64</code>.</p>"},{"location":"klicky/klicky/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"klicky/klicky/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"klicky/klicky/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"klicky/klicky/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p>"},{"location":"klicky/klicky/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"microprobe/microprobe/","title":"Microprobe","text":""},{"location":"microprobe/microprobe/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, the <code>#simple-af-microprobe</code> channel has been setup for anyone wanting support for microprobe.</p> <p></p>"},{"location":"microprobe/microprobe/#firmware-requirements","title":"Firmware requirements","text":"<p>This guide assumes you have a K1, K1C or K1 Max and you are running stock creality firmware 1.3.3.5 or higher, or alternately you are using  my prerooted firmware.   Any other pre-rooted firmware is explicitly not supported and the installer.sh will validate this and refuse to proceed if you try to use it on different firmware.</p>"},{"location":"microprobe/microprobe/#slicer-settings","title":"Slicer Settings","text":"<p>There is an assumption that you are using a slicer like OrcaSlicer and Machine G-code like:</p> <p></p> <p>Machine start G-code <pre><code>M104 S0 ; Stops OrcaSlicer from sending temp waits separately\nM140 S0\nSTART_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single]\n</code></pre></p> <p>Machine end G-code <pre><code>END_PRINT\n</code></pre></p>"},{"location":"microprobe/microprobe/#probe-installation","title":"Probe Installation","text":""},{"location":"microprobe/microprobe/#mount-options","title":"Mount Options","text":"Mount URL Default https://www.printables.com/model/867527-k1-biqu-microprobe-mount-remix BootyGantry https://github.com/tlace17/K1-Linear-Rail-Gantry/blob/main/STLs/Probe%20Mounts/Rail%20Carriage%20Microprobe%20Mount.stl <p>Important: All mount options assume a V2 microprobe is being used, after the installation you may need to modify <code>microprobe.cfg</code> to  switch the pin config:</p> <pre><code>#pin: ^nozzle_mcu: PA9  # MicroProbe V1 users should use this line to trigger on high\npin: ^!nozzle_mcu: PA9  # MicroProbe V2 users should use this line to trigger on low\n</code></pre>"},{"location":"microprobe/microprobe/#wiring","title":"Wiring","text":"<p>The probe and the TOUCH port on the Nozzle MCU board both mate with a 5-pin Molex Picoblade connector. A 5-pin cable is needed to connect the probe to the TOUCH port.</p> <p>Some sellers may call the connector \"Micro JST SH 1.25\" but that is incorrect. Several premade cables are compatible. Most notably the Creality cable for their CR Touch probe: - https://www.aliexpress.us/item/1005004960067376.html - https://www.amazon.com/dp/B0BKPFY24M/ - https://www.bastelgarage.ch/0-1m-creality-cr-touch-bl-touch-adapterkabel-sprite-extruder</p> <p>Alternatively, two pre-crimped cables can be soldered together: - https://www.amazon.de/dp/B0BNF6J1RJ</p> <p>Or a cable built from pre-crimped wires and connector housings: - https://www.amazon.de/dp/B08RMQP6YP</p> <p></p> <p></p> <p>Connect to TOUCH port on the nozzle MCU. it is accessible from the side left (LIDAR) side of the printhead and only the external cover of the printhead has to be removed.</p> <p></p> <p></p>"},{"location":"microprobe/microprobe/#installation","title":"Installation","text":"<p>The installation can only be performed on a printer which has been rooted and ssh granted</p> <p>You need root access, if you are not already root, then follow the excellent Helper Script Enable Root Access instructions.</p>"},{"location":"microprobe/microprobe/#factory-reset","title":"Factory Reset","text":"<p>You must do a factory reset before running the installer.sh.   Follow these steps to do a factory reset, which retains root access and skips the startup calibration checks:</p> <pre><code>wget --no-check-certificate  https://raw.githubusercontent.com/pellcorp/creality/main/k1/services/S58factoryreset\nchmod +x S58factoryreset\n./S58factoryreset reset\n</code></pre> <p>Warn</p> <p>It is really important you do not close the ssh session until you get this message:</p> <p></p>"},{"location":"microprobe/microprobe/#clone-the-repo","title":"Clone the Repo","text":"<pre><code>git config --global http.sslVerify false\ngit clone https://github.com/pellcorp/creality.git /usr/data/pellcorp\nsync\n</code></pre> RPC Timeouts, try SSH Git Clone <pre><code>mkdir -p /root/.ssh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/git-ssh.sh\" -O /root/git-ssh.sh\nchmod 777 /root/git-ssh.sh\nwget --no-check-certificate \"https://raw.githubusercontent.com/pellcorp/creality/main/k1/ssh/pellcorp-identity\" -O /root/.ssh/pellcorp-identity\nexport GIT_SSH_IDENTITY=pellcorp\nexport GIT_SSH=/root/git-ssh.sh\ngit clone git@github.com:pellcorp/creality.git /usr/data/pellcorp\ncd /usr/data/pellcorp &amp;&amp; git remote set-url origin https://github.com/pellcorp/creality.git &amp;&amp; cd\n</code></pre>"},{"location":"microprobe/microprobe/#config-overrides","title":"Config Overrides","text":"<p>If you have pellcorp-overrides in github but not stored locally, you need to recreate the /usr/data/pellcorp-overrides directory before running the installer.sh!</p>"},{"location":"microprobe/microprobe/#run-the-installer","title":"Run the installer","text":"<p>To run the script, you must specify the probe you want to use.</p> <pre><code>/usr/data/pellcorp/k1/installer.sh --install microprobe --mount Mount\n</code></pre> <p>Tip</p> <p>For <code>Mount</code> you need to specify the mount option your have used, please refer to Mount Options.   </p> <p>If you are using a non-supported mount you should skip the <code>--mount</code> option and adjust your configuration after installation before trying to perform a bed mesh or Screws Tilt Calculate!</p> RPC failed; curl 18 transfer closed <p>You might get this error:</p> <pre><code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining\nfatal: the remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n</code></pre> <p>Just rerun the installer.sh script (with the same probe argument), it will start from the stage that failed (most of the time this will be the Installing Klipper stage!)</p> <p>You can also prefix the installer command with <code>AF_GIT_CLONE=ssh</code> to force git to clone via ssh, this will take a lot longer, but it will never time out, so its good in a pinch if you are getting repeated klipper repo clone failures.</p>"},{"location":"microprobe/microprobe/#post-installation","title":"Post Installation","text":""},{"location":"microprobe/microprobe/#v1-probe-changes","title":"V1 Probe Changes","text":"<p>The default microprobe.cfg assumes a V2 microprobe a post install change to <code>[probe]</code> section of <code>printer.cfg</code> will be required for a V1.  Have a look at the printer.cfg after the install has finished and have a look at the commented V1 pin config.</p>"},{"location":"microprobe/microprobe/#mcu-firmware-updates-are-pending","title":"MCU Firmware updates are pending","text":"<p>At the end of the installer process if you get this message:</p> <pre><code>WARNING: MCU Firmware updates are pending you need to power cycle your printer!\n</code></pre> <p>It means that new MCU firmware updates need to be applied and this can only be done by power cycling the printer.  After your printer is power cycled you can verify firmware was updated with the <code>CHECK_FIRMWARE</code> macro from Fluidd or Mainsail, if you see this message:</p> <pre><code>INFO: Your MCU Firmware is up to date!\n</code></pre> <p>Your printer MCU firmware was updated successfully.   If you still see the <code>MCU Firmware updates are pending you need to power cycle your printer!</code> message after a power cycle, check the <code>/tmp/mcu_update.log</code>, you may be asked to provide this file on Discord if you need additional assistance, sometimes an additional power cycle can solve the problem, there is a very short window of time (15 seconds) in which the MCU firmware can be updated, so  there is a chance it will work after an additional power cycle.</p>"},{"location":"microprobe/microprobe/#verify-usb-key","title":"Verify USB Key","text":"<p>Tip</p> <p>You should verify your USB key often just to make sure you have something if you need to unbrick your printer, simply type <code>CHECK_USB_KEY</code> or hit the button in Fluidd / Mainsail</p> <p>It is important to make sure you have a way to emergency factory reset the printer, if the worst happens.   There is a macro in Simple AF called <code>CHECK_USB_KEY</code> that will wait for you to plug a USB key in and tell you if it was able to be successfully mounted.</p> <p></p> <ul> <li>If you get the message: <code>INFO - USB Key was recognised and mounted correctly (/tmp/udisk/sda1)</code>, your USB is perfect to use for a factory reset.</li> <li>If you get no message at all before the script ends (after 60 seconds), your USB is defective.   You can check the <code>messages</code> file in the logs section of your UI to get more details about why the usb key could not be mounted!</li> </ul>"},{"location":"microprobe/microprobe/#calibration","title":"Calibration","text":"<p>For the microprobe it is extremely important to do the PROBE_CALIBRATE step to configure your z-offset, regardless of what model you have used to mount the probe!</p> <p></p> <p>You should use the Paper Test Method for this z-offset calibration.</p> <p>Note</p> <p>The default z-offset for Microprobe is 0, so your prints won't stick without doing this step.</p>"},{"location":"microprobe/microprobe/#first-print","title":"First Print","text":"<p>For this first print you can go and do the tuning first (PID Tuning, etc) or you can go ahead and optimise your probe z offset using baby stepping.</p> <p>In fluidd the save button after you finish or cancel your print can be a bit hard to find, look for</p> <p></p>"},{"location":"microprobe/microprobe/#timer-too-close-and-microsteps","title":"Timer too close and microsteps","text":"<p>For microprobe you cannot use more than <code>microsteps: 64</code></p>"},{"location":"microprobe/microprobe/#tuning","title":"Tuning","text":"<p>At least PID tuning (bed and extruder) and input shaping is required for acceptable printing.  If you try and print after running the installer.sh and a power cycle but before any calibration you will most likely have horrendous quality, the worst you have ever seen on the k1.   After PID tuning and input shaping you should see the same kind of quality as you get with stock k1 + input shaper fix.</p>"},{"location":"microprobe/microprobe/#quick-start","title":"Quick Start","text":"<p>You can use the QUICK_START Macro to automatically complete Bed and Nozzle PID Tuning and Input Shaping Automatically.</p>"},{"location":"microprobe/microprobe/#pid-tuning","title":"Pid Tuning","text":"<p>Source: Calibrate Pid Settings</p> <p>For example you might run these:</p> <pre><code>PID_CALIBRATE_BED BED_TEMP=65\nPID_CALIBRATE_HOTEND HOTEND_TEMP=230\n</code></pre> <p>Note</p> <p>The <code>PID_CALIBRATE_BED</code> and <code>PID_CALIBRATE_HOTEND</code> macros are located in the <code>useful_macros.cfg</code> file and they have defaults values for BED_TEMP and HOTEND_TEMP so you can just run them by clicking on them if you want that same temperature.</p>"},{"location":"microprobe/microprobe/#input-shaping","title":"Input Shaping","text":"<p>There is no default configuration for input shaping so it is essentially disabled out of the box.</p> <p>You can use the <code>SHAPER_CALIBRATE</code> macro to run input shaping, just be sure to <code>SAVE CONFIG</code> at the end, to choose the automatically selected shaper config, be aware though that the shaper chosen might be sub-optimal due to a slight difference in vibrations between two options.  So you should probably review the output and potentially choose an alternative if it gives you higher recommended max acceleration for minimal increase in vibration.</p> <p>Input Shaper Auto Calibration</p>"},{"location":"microprobe/microprobe/#other-calibrations","title":"Other Calibrations","text":"<p>Info</p> <p>The default value for pressure advance is set to <code>0.04</code></p> <p>Refer to Orcaslicer Calibration for more calibrations</p> <p>Refer to the Ellis Print Tuning Guide for more great tuning ideas.</p>"},{"location":"support/discord/","title":"Discord","text":""},{"location":"support/discord/#where-can-i-get-help","title":"Where can I get help?","text":"<p>Come on over to the pellcorp discord server, Here you will find a friendly community willing to help with all aspects of Simple AF and the supported probes.</p> <p>Ugh....will figure this out later.</p> <p>the <code>#simple-af-carto</code> channel has been setup for anyone wanting support for cartographer.</p> <p></p>"}]}